name: Docker Image CI

on:
  workflow_dispatch:
  schedule:
   - cron: '0 12 * * 1'

permissions:
  actions:  write
  contents: read
  packages: write

jobs:
  Upstream:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        KALI_VER:
        - rolling
        - bleeding-edge
    steps:
    - name: Maximize build space
      uses: AdityaGarg8/remove-unwanted-software@v4.1
      with:
        remove-dotnet: true
        remove-android: true
        remove-haskell: true
        remove-codeql: true
        remove-large-packages: true
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: 'phusion/baseimage-docker'
    - name: Add Kali
      run: |
        sed -i 's/Debian)/Debian|Kali)/' image/prepare.sh
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        image: ghcr.io/amitie10g/binfmt:latest
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=ghcr.io/amitie10g/buildkit:master
    - name: Set tags metadata
      uses: docker/metadata-action@v5
      id: meta
      with:
        images: |
          ${{ secrets.DOCKERHUB_USERNAME }}/kali-${{ matrix.KALI_VER }}
          ghcr.io/${{ github.repository_owner }}/kali-${{ matrix.KALI_VER }}
          ${{ strategy.job-index == 0 && format('{0}/{1}', secrets.DOCKERHUB_USERNAME, 'kali') || '' }}
          ${{ strategy.job-index == 0 && format('{0}/{1}/{2}', 'ghcr.io', github.repository_owner, 'kali') || '' }}
        tags: |
          upstream
    - name: Build And Push Docker Image
      uses: docker/build-push-action@v5
      id: build
      with:
        push: true
        context: image
        build-args: |
          BASE_IMAGE=kalilinux/kali-${{ matrix.KALI_VER }}
        platforms: linux/amd64,linux/arm64
        cache-to: type=inline
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  Base:
    runs-on: ubuntu-22.04
    needs: Upstream
    strategy:
      fail-fast: false
      matrix:
        KALI_VER:
        - rolling
        - bleeding-edge
    steps:
    - name: Maximize build space
      uses: AdityaGarg8/remove-unwanted-software@v4.1
      with:
        remove-dotnet: true
        remove-android: true
        remove-haskell: true
        remove-codeql: true
        remove-large-packages: true
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        image: ghcr.io/amitie10g/binfmt:latest
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=ghcr.io/amitie10g/buildkit:master
    - name: Set tags metadata
      uses: docker/metadata-action@v5
      id: meta
      with:
        images: |
          ${{ secrets.DOCKERHUB_USERNAME }}/kali-${{ matrix.KALI_VER }}
          ghcr.io/${{ github.repository_owner }}/kali-${{ matrix.KALI_VER }}
          ${{ strategy.job-index == 0 && format('{0}/{1}', secrets.DOCKERHUB_USERNAME, 'kali') || '' }}
          ${{ strategy.job-index == 0 && format('{0}/{1}/{2}', 'ghcr.io', github.repository_owner, 'kali') || '' }}
        tags: |
          base
    - name: Build And Push Docker Image
      uses: docker/build-push-action@v5
      id: build
      with:
        push: true
        context: .
        build-args: |
          KALI_VER=${{ matrix.KALI_VER }}
        target: base
        platforms: linux/amd64,linux/arm64
        cache-from: ghcr.io/${{ github.repository_owner }}/kali-${{ matrix.KALI_VER }}:upstream
        cache-to: type=inline
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  Labs:
    runs-on: ubuntu-22.04
    needs: Base
    strategy:
      fail-fast: false
      matrix:
        KALI_VER:
        - rolling
        - bleeding-edge
    steps:
    - name: Maximize build space
      uses: AdityaGarg8/remove-unwanted-software@v4.1
      with:
        remove-dotnet: true
        remove-android: true
        remove-haskell: true
        remove-codeql: true
        remove-large-packages: true
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        image: ghcr.io/amitie10g/binfmt:latest
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=ghcr.io/amitie10g/buildkit:master
    - name: Set tags metadata
      uses: docker/metadata-action@v5
      id: meta
      with:
        images: |
          ${{ secrets.DOCKERHUB_USERNAME }}/kali-${{ matrix.KALI_VER }}
          ghcr.io/${{ github.repository_owner }}/kali-${{ matrix.KALI_VER }}
          ${{ strategy.job-index == 0 && format('{0}/{1}', secrets.DOCKERHUB_USERNAME, 'kali') || '' }}
          ${{ strategy.job-index == 0 && format('{0}/{1}/{2}', 'ghcr.io', github.repository_owner, 'kali') || '' }}
        tags: |
          labs
          exploitable
          vulnerable
    - name: Build And Push Docker Image
      uses: docker/build-push-action@v5
      id: build
      with:
        push: true
        context: .
        build-args: |
          KALI_VER=${{ matrix.KALI_VER }}
        target: labs
        platforms: linux/amd64,linux/arm64
        cache-from: ghcr.io/${{ github.repository_owner }}/kali-${{ matrix.KALI_VER }}:base
        cache-to: type=inline
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  Desktop:
    runs-on: ubuntu-22.04
    needs: Base
    strategy:
      fail-fast: false
      matrix:
        KALI_VER:
        - rolling
        - bleeding-edge
    steps:
    - name: Maximize build space
      uses: AdityaGarg8/remove-unwanted-software@v4.1
      with:
        remove-dotnet: true
        remove-android: true
        remove-haskell: true
        remove-codeql: true
        remove-large-packages: true
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        image: ghcr.io/amitie10g/binfmt:latest
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=ghcr.io/amitie10g/buildkit:master
    - name: Set tags metadata
      uses: docker/metadata-action@v5
      id: meta1
      with:
        images: |
          ${{ secrets.DOCKERHUB_USERNAME }}/kali-${{ matrix.KALI_VER }}
          ghcr.io/${{ github.repository_owner }}/kali-${{ matrix.KALI_VER }}
          ${{ strategy.job-index == 0 && format('{0}/{1}', secrets.DOCKERHUB_USERNAME, 'kali') || '' }}
          ${{ strategy.job-index == 0 && format('{0}/{1}/{2}', 'ghcr.io', github.repository_owner, 'kali') || '' }}
        tags: |
          desktop
    - name: Set tags metadata
      uses: docker/metadata-action@v5
      id: meta2
      with:
        images: |
          ${{ secrets.DOCKERHUB_USERNAME }}/kali-${{ matrix.KALI_VER }}
          ghcr.io/${{ github.repository_owner }}/kali-${{ matrix.KALI_VER }}
          ${{ strategy.job-index == 0 && format('{0}/{1}', secrets.DOCKERHUB_USERNAME, 'kali') || '' }}
          ${{ strategy.job-index == 0 && format('{0}/{1}/{2}', 'ghcr.io', github.repository_owner, 'kali') || '' }}
        tags: |
          latest
          top10
          desktop-top10
    - name: Build And Push Docker Image (desktop)
      uses: docker/build-push-action@v5
      id: build1
      with:
        push: true
        context: .
        build-args: |
          KALI_VER=${{ matrix.KALI_VER }}
        target: desktop
        platforms: linux/amd64,linux/arm64
        cache-from: ghcr.io/${{ github.repository_owner }}/kali-${{ matrix.KALI_VER }}:base
        cache-to: type=inline
        tags: ${{ steps.meta1.outputs.tags }}
        labels: ${{ steps.meta1.outputs.labels }}
    - name: Build And Push Docker Image (latest)
      uses: docker/build-push-action@v5
      id: build2
      with:
        push: true
        context: .
        target: desktop-top10
        platforms: linux/amd64,linux/arm64
        cache-to: type=inline
        tags: ${{ steps.meta2.outputs.tags }}
        labels: ${{ steps.meta2.outputs.labels }}

  Nethunter:
    runs-on: ubuntu-22.04
    needs: Desktop
    strategy:
      fail-fast: false
      matrix:
        KALI_VER:
        - rolling
        - bleeding-edge
    steps:
    - name: Maximize build space
      uses: AdityaGarg8/remove-unwanted-software@v4.1
      with:
        remove-dotnet: true
        remove-android: true
        remove-haskell: true
        remove-codeql: true
        remove-large-packages: true
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        image: ghcr.io/amitie10g/binfmt:latest
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=ghcr.io/amitie10g/buildkit:master
    - name: Set tags metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ secrets.DOCKERHUB_USERNAME }}/kali-${{ matrix.KALI_VER }}
          ghcr.io/${{ github.repository_owner }}/kali-${{ matrix.KALI_VER }}
        tags: |
          nethunter
    - name: Build And Push Docker Image
      uses: docker/build-push-action@v5
      with:
        push: true
        context: .
        build-args: |
          KALI_VER=${{ matrix.KALI_VER }}
        target: nethunter
        platforms: linux/amd64,linux/arm64
        cache-from: ghcr.io/${{ github.repository_owner }}/kali-${{ matrix.KALI_VER }}:latest
        cache-to: type=inline
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: Check space available
      run: |
        df -h .
        df -h /var/lib/docker

  Tools:
    runs-on: ubuntu-22.04
    needs: Desktop
    strategy:
      fail-fast: false
      matrix:
        KALI_VER:
        - rolling
        - bleeding-edge
        TOOL:
        - 802-11
        - bluetooth
        - crypto-stego
        - database
        - detect
        - exploitation
        - forensics
        - fuzzing
        - gpu
        - hardware
        - identify
        - information-gathering
        - passwords
        - post-exploitation
        - protect
        - recover
        - reporting
        - respond
        - reverse-engineering
        - rfid
        - sdr
        - sniffing-spoofing
        - social-engineering
        - voip
        - vulnerability
        - web
        - windows-resources
        - wireless
    steps:
    - name: Maximize build space
      uses: AdityaGarg8/remove-unwanted-software@v4.1
      with:
        remove-dotnet: true
        remove-android: true
        remove-haskell: true
        remove-codeql: true
        remove-large-packages: true
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        image: ghcr.io/amitie10g/binfmt:latest
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=ghcr.io/amitie10g/buildkit:master
    - name: Set tags metadata
      uses: docker/metadata-action@v5
      id: meta
      with:
        images: |
          ${{ secrets.DOCKERHUB_USERNAME }}/kali-${{ matrix.KALI_VER }}
          ghcr.io/${{ github.repository_owner }}/kali-${{ matrix.KALI_VER }}
        tags: |
          ${{ matrix.TOOL }}
    - name: Build And Push Docker Image
      uses: docker/build-push-action@v5
      with:
        push: true
        context: .
        build-args: |
          KALI_VER=${{ matrix.KALI_VER }}
        target: tool
        platforms: linux/amd64,linux/arm64
        cache-from: ghcr.io/${{ github.repository_owner }}/kali-${{ matrix.KALI_VER }}:latest
        cache-to: type=inline
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: Check space available
      run: |
        df -h .
        df -h /var/lib/docker

  Headless:
    needs: Base
    strategy:
      fail-fast: false
      matrix:
        KALI_VER:
        - rolling
        - bleeding-edge
    runs-on: ubuntu-22.04
    steps:
    - name: Maximize build space
      uses: AdityaGarg8/remove-unwanted-software@v4.1
      with:
        remove-dotnet: true
        remove-android: true
        remove-haskell: true
        remove-codeql: true
        remove-large-packages: true
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        image: ghcr.io/amitie10g/binfmt:latest
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=ghcr.io/amitie10g/buildkit:master
    - name: Set tags metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ secrets.DOCKERHUB_USERNAME }}/kali-${{ matrix.KALI_VER }}
          ghcr.io/${{ github.repository_owner }}/kali-${{ matrix.KALI_VER }}
        tags: |
          headless
    - name: Build And Push Docker Image
      id: build
      uses: docker/build-push-action@v5
      with:
        push: true
        context: .
        build-args: |
          KALI_VER=${{ matrix.KALI_VER }}
        target: headless
        platforms: linux/amd64,linux/arm64
        cache-from: ghcr.io/${{ github.repository_owner }}/kali-${{ matrix.KALI_VER }}:base
        cache-to: type=inline
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: Check space available
      run: |
        df -h .
        df -h /var/lib/docker

  Cleanup:
    needs: [Desktop, Labs, Nethunter, Tools, Headless]
    runs-on: ubuntu-24.04
    steps:
    - name: Cleanup Docker cache image
      run: |
        curl -X DELETE -H "Authorization: token ${{ secrets.PACKAGE_DELETE_TOKEN }}" \
          https://api.github.com/user/packages/container/kali-cache
